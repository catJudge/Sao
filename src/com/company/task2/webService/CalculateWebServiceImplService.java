
package com.company.task2.webService;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebServiceClient(name = "CalculateWebServiceImplService", targetNamespace = "http://webService.task1.company.com/", wsdlLocation = "file:/D:/Dropbox/\u0423\u0447\u0435\u0431\u0430/\u041f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435/7_semester/java/task1/src/com/company/task2/calculate.wsdl")
public class CalculateWebServiceImplService
    extends Service
{

    private final static URL CALCULATEWEBSERVICEIMPLSERVICE_WSDL_LOCATION;
    private final static WebServiceException CALCULATEWEBSERVICEIMPLSERVICE_EXCEPTION;
    private final static QName CALCULATEWEBSERVICEIMPLSERVICE_QNAME = new QName("http://webService.task1.company.com/", "CalculateWebServiceImplService");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL("file:/D:/Dropbox/\u0423\u0447\u0435\u0431\u0430/\u041f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435/7_semester/java/task1/src/com/company/task2/calculate.wsdl");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        CALCULATEWEBSERVICEIMPLSERVICE_WSDL_LOCATION = url;
        CALCULATEWEBSERVICEIMPLSERVICE_EXCEPTION = e;
    }

    public CalculateWebServiceImplService() {
        super(__getWsdlLocation(), CALCULATEWEBSERVICEIMPLSERVICE_QNAME);
    }

    public CalculateWebServiceImplService(WebServiceFeature... features) {
        super(__getWsdlLocation(), CALCULATEWEBSERVICEIMPLSERVICE_QNAME, features);
    }

    public CalculateWebServiceImplService(URL wsdlLocation) {
        super(wsdlLocation, CALCULATEWEBSERVICEIMPLSERVICE_QNAME);
    }

    public CalculateWebServiceImplService(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, CALCULATEWEBSERVICEIMPLSERVICE_QNAME, features);
    }

    public CalculateWebServiceImplService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public CalculateWebServiceImplService(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns CalculateWebService
     */
    @WebEndpoint(name = "CalculateWebServiceImplPort")
    public CalculateWebService getCalculateWebServiceImplPort() {
        return super.getPort(new QName("http://webService.task1.company.com/", "CalculateWebServiceImplPort"), CalculateWebService.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns CalculateWebService
     */
    @WebEndpoint(name = "CalculateWebServiceImplPort")
    public CalculateWebService getCalculateWebServiceImplPort(WebServiceFeature... features) {
        return super.getPort(new QName("http://webService.task1.company.com/", "CalculateWebServiceImplPort"), CalculateWebService.class, features);
    }

    private static URL __getWsdlLocation() {
        if (CALCULATEWEBSERVICEIMPLSERVICE_EXCEPTION!= null) {
            throw CALCULATEWEBSERVICEIMPLSERVICE_EXCEPTION;
        }
        return CALCULATEWEBSERVICEIMPLSERVICE_WSDL_LOCATION;
    }

}
